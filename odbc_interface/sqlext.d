/*
 *  Copyright (C) 1995 by Ke Jin <kejin@empress.com>
 *  Copyright (C) 1996-2014 by OpenLink Software <iodbc@openlinksw.com>
 *  All Rights Reserved.
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *
 *  1. Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *  2. Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in
 *     the documentation and/or other materials provided with the
 *     distribution.
 *  3. Neither the name of OpenLink Software Inc. nor the names of its
 *     contributors may be used to endorse or promote products derived
 *     from this software without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL OPENLINK OR
 *  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 *  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 *  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 *  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
module odbc_interface.sqlext;

import std.typetuple : TypeTuple;

public import odbc_interface.sql;
import odbc_interface.sqlucode;

//Useful Constants
enum SQL_SPEC_MAJOR = 3;
enum SQL_SPEC_MINOR = 52;
enum SQL_SPEC_STRING = "03.52";

enum SQL_SQLSTATE_SIZE = 5;
enum SQL_MAX_DSN_LENGTH = 32;
enum SQL_MAX_OPTION_STRING_LENGTH = 256;

//Special length values for attributes
enum SQL_IS_POINTER = -4;
enum SQL_IS_UINTEGER = -5;
enum SQL_IS_INTEGER = -6;
enum SQL_IS_USMALLINT = -7;
enum SQL_IS_SMALLINT = -8;

//SQL unicode data types
enum SQL_UNICODE = SQL_TYPE_ID.SQL_WCHAR;
enum SQL_UNICODE_VARCHAR = SQL_TYPE_ID.SQL_WVARCHAR;
enum SQL_UNICODE_LONGVARCHAR = SQL_TYPE_ID.SQL_WLONGVARCHAR;
enum SQL_UNICODE_CHAR = SQL_TYPE_ID.SQL_WCHAR;

//C datatype to SQL datatype mapping
enum SQL_SIGNED_OFFSET = -20;
enum SQL_UNSIGNED_OFFSET = -22;

enum SQL_C_TYPE_ID : SQLSMALLINT {
    SQL_C_DEFAULT = 99,
    SQL_C_CHAR = SQL_TYPE_ID.SQL_CHAR,
    SQL_C_LONG = SQL_TYPE_ID.SQL_INTEGER,
    SQL_C_SHORT = SQL_TYPE_ID.SQL_SMALLINT,
    SQL_C_FLOAT = SQL_TYPE_ID.SQL_REAL,
    SQL_C_DOUBLE = SQL_TYPE_ID.SQL_DOUBLE,
    SQL_C_NUMERIC = SQL_TYPE_ID.SQL_NUMERIC,
    SQL_C_DATE = SQL_TYPE_ID.SQL_DATE,
    SQL_C_TIME = SQL_TYPE_ID.SQL_TIME,
    SQL_C_TIMESTAMP = SQL_TYPE_ID.SQL_TIMESTAMP,
    SQL_C_BINARY = SQL_TYPE_ID.SQL_BINARY,
    SQL_C_BIT = SQL_TYPE_ID.SQL_BIT,
    SQL_C_WCHAR = SQL_TYPE_ID.SQL_WCHAR,
    SQL_C_WVARCHAR = SQL_TYPE_ID.SQL_WVARCHAR,
    SQL_C_WLONGVARCHAR = SQL_TYPE_ID.SQL_WLONGVARCHAR,
    SQL_C_TCHAR = tcharValue(),
    SQL_C_SBIGINT = SQL_TYPE_ID.SQL_BIGINT + SQL_SIGNED_OFFSET,
    SQL_C_UBIGINT = SQL_TYPE_ID.SQL_BIGINT + SQL_UNSIGNED_OFFSET,
    SQL_C_VARBOOKMARK = SQL_C_TYPE_ID.SQL_C_BINARY,
    SQL_C_TINYINT = SQL_TYPE_ID.SQL_TINYINT,
    SQL_C_SLONG = SQL_C_LONG + SQL_SIGNED_OFFSET,
    SQL_C_SSHORT = SQL_C_SHORT + SQL_SIGNED_OFFSET,
    SQL_C_STINYINT = SQL_TYPE_ID.SQL_TINYINT + SQL_SIGNED_OFFSET,
    SQL_C_ULONG = SQL_C_LONG + SQL_UNSIGNED_OFFSET,
    SQL_C_USHORT = SQL_C_SHORT + SQL_UNSIGNED_OFFSET,
    SQL_C_UTINYINT = SQL_TYPE_ID.SQL_TINYINT + SQL_UNSIGNED_OFFSET,
    SQL_C_BOOKMARK = bookmarkValue(),
    SQL_C_TYPE_DATE = SQL_TYPE_ID.SQL_TYPE_DATE,
    SQL_C_TYPE_TIME = SQL_TYPE_ID.SQL_TYPE_TIME,
    SQL_C_TYPE_TIMESTAMP = SQL_TYPE_ID.SQL_TYPE_TIMESTAMP,
    SQL_C_INTERVAL_YEAR = SQL_TYPE_ID.SQL_INTERVAL_YEAR,
    SQL_C_INTERVAL_MONTH = SQL_TYPE_ID.SQL_INTERVAL_MONTH,
    SQL_C_INTERVAL_DAY = SQL_TYPE_ID.SQL_INTERVAL_DAY,
    SQL_C_INTERVAL_HOUR = SQL_TYPE_ID.SQL_INTERVAL_HOUR,
    SQL_C_INTERVAL_MINUTE = SQL_TYPE_ID.SQL_INTERVAL_MINUTE,
    SQL_C_INTERVAL_SECOND = SQL_TYPE_ID.SQL_INTERVAL_SECOND,
    SQL_C_INTERVAL_YEAR_TO_MONTH = SQL_TYPE_ID.SQL_INTERVAL_YEAR_TO_MONTH,
    SQL_C_INTERVAL_DAY_TO_HOUR = SQL_TYPE_ID.SQL_INTERVAL_DAY_TO_HOUR,
    SQL_C_INTERVAL_DAY_TO_MINUTE = SQL_TYPE_ID.SQL_INTERVAL_DAY_TO_MINUTE,
    SQL_C_INTERVAL_DAY_TO_SECOND = SQL_TYPE_ID.SQL_INTERVAL_DAY_TO_SECOND,
    SQL_C_INTERVAL_HOUR_TO_MINUTE = SQL_TYPE_ID.SQL_INTERVAL_HOUR_TO_MINUTE,
    SQL_C_INTERVAL_HOUR_TO_SECOND = SQL_TYPE_ID.SQL_INTERVAL_HOUR_TO_SECOND,
    SQL_C_INTERVAL_MINUTE_TO_SECOND = SQL_TYPE_ID.SQL_INTERVAL_MINUTE_TO_SECOND,
    SQL_C_GUID = SQL_TYPE_ID.SQL_GUID,
}

alias SQL_C_TYPES = TypeTuple!(
    SQL_C_TYPE_ID.SQL_C_DEFAULT, void,
    SQL_C_TYPE_ID.SQL_C_CHAR, string,
    SQL_C_TYPE_ID.SQL_C_WCHAR, wstring,
    SQL_C_TYPE_ID.SQL_C_LONG, int,
    SQL_C_TYPE_ID.SQL_C_SHORT, short,
    SQL_C_TYPE_ID.SQL_C_FLOAT, float,
    SQL_C_TYPE_ID.SQL_C_DOUBLE, double,
    SQL_C_TYPE_ID.SQL_C_NUMERIC, long,
    SQL_C_TYPE_ID.SQL_C_SLONG, int,
    SQL_C_TYPE_ID.SQL_C_SSHORT, short,
    SQL_C_TYPE_ID.SQL_C_ULONG, uint,
    SQL_C_TYPE_ID.SQL_C_USHORT, ushort,
    SQL_C_TYPE_ID.SQL_C_SBIGINT, long,
    SQL_C_TYPE_ID.SQL_C_UBIGINT, ulong
    );

private auto bookmarkValue() {
    version(Win64) {
        return SQL_C_TYPE_ID.SQL_C_UBIGINT;
    } else {
        return SQL_C_TYPE_ID.SQL_C_ULONG;
    }
}

private auto tcharValue() {
    version(UNICODE) {
        return SQL_C_TYPE_ID.SQL_C_WCHAR;
    } else {
        return SQL_C_TYPE_ID.SQL_C_CHAR;
    }
}

enum SQL_TYPE_NULL = 0;

/*
 * ----------------------------------------------------------------------
 *  Level 1 Functions
 * ----------------------------------------------------------------------
 */

//SQLBindParameter
enum SQL_DEFAULT_PARAM = -5;
enum SQL_IGNORE = -6;
enum SQL_COLUMN_IGNORE = SQL_IGNORE;
enum SQL_LEN_DATA_AT_EXEC_OFFSET = -100;
int SQL_LEN_DATA_AT_EXEC(int length) {
    return -length + SQL_LEN_DATA_AT_EXEC_OFFSET;
}

//binary length for driver specific attributes
enum SQL_LEN_BINARY_ATTR_OFFSET = -100;
int SQL_LEN_BINARY_ATTR(int length) {
    return -length + SQL_LEN_BINARY_ATTR_OFFSET;
}

//SQLColAttributes
enum DescriptorField : SQLSMALLINT {
    SQL_COLUMN_COUNT = 0,
    SQL_COLUMN_NAME = 1,
    SQL_COLUMN_TYPE = 2,
    SQL_COLUMN_LENGTH = 3,
    SQL_COLUMN_PRECISION = 4,
    SQL_COLUMN_SCALE = 5,
    SQL_COLUMN_DISPLAY_SIZE = 6,
    SQL_COLUMN_NULLABLE = 7,
    SQL_COLUMN_UNSIGNED = 8,
    SQL_COLUMN_MONEY = 9,
    SQL_COLUMN_UPDATABLE = 10,
    SQL_COLUMN_AUTO_INCREMENT = 11,
    SQL_COLUMN_CASE_SENSITIVE = 12,
    SQL_COLUMN_SEARCHABLE = 13,
    SQL_COLUMN_TYPE_NAME = 14,
    SQL_COLUMN_TABLE_NAME = 15,
    SQL_COLUMN_OWNER_NAME = 16,
    SQL_COLUMN_QUALIFIER_NAME = 17,
    SQL_COLUMN_LABEL = 18,
    SQL_COLUMN_DRIVER_START = 1000,

    //SQLGetDescField - identifiers of fields in the SQL descriptor
    SQL_DESC_COUNT = 1001,
    SQL_DESC_TYPE = 1002,
    SQL_DESC_LENGTH = 1003,
    SQL_DESC_OCTET_LENGTH_PTR = 1004,
    SQL_DESC_PRECISION = 1005,
    SQL_DESC_SCALE = 1006,
    SQL_DESC_DATETIME_INTERVAL_CODE = 1007,
    SQL_DESC_NULLABLE = 1008,
    SQL_DESC_INDICATOR_PTR = 1009,
    SQL_DESC_DATA_PTR = 1010,
    SQL_DESC_NAME = 1011,
    SQL_DESC_UNNAMED = 1012,
    SQL_DESC_OCTET_LENGTH = 1013,
    SQL_DESC_ALLOC_TYPE = 1099,
    //SQLGetDescField - extended descriptor field
    SQL_DESC_ARRAY_SIZE = 20,
    SQL_DESC_ARRAY_STATUS_PTR = 21,
    SQL_DESC_AUTO_UNIQUE_VALUE = SQL_COLUMN_AUTO_INCREMENT,
    SQL_DESC_BASE_COLUMN_NAME = 22,
    SQL_DESC_BASE_TABLE_NAME = 23,
    SQL_DESC_BIND_OFFSET_PTR = 24,
    SQL_DESC_BIND_TYPE = 25,
    SQL_DESC_CASE_SENSITIVE = SQL_COLUMN_CASE_SENSITIVE,
    SQL_DESC_CATALOG_NAME = SQL_COLUMN_QUALIFIER_NAME,
    SQL_DESC_CONCISE_TYPE = SQL_COLUMN_TYPE,
    SQL_DESC_DATETIME_INTERVAL_PRECISION = 26,
    SQL_DESC_DISPLAY_SIZE = SQL_COLUMN_DISPLAY_SIZE,
    SQL_DESC_FIXED_PREC_SCALE = SQL_COLUMN_MONEY,
    SQL_DESC_LABEL = SQL_COLUMN_LABEL,
    SQL_DESC_LITERAL_PREFIX = 27,
    SQL_DESC_LITERAL_SUFFIX = 28,
    SQL_DESC_LOCAL_TYPE_NAME = 29,
    SQL_DESC_MAXIMUM_SCALE = 30,
    SQL_DESC_MINIMUM_SCALE = 31,
    SQL_DESC_NUM_PREC_RADIX = 32,
    SQL_DESC_PARAMETER_TYPE = 33,
    SQL_DESC_ROWS_PROCESSED_PTR = 34,
    SQL_DESC_ROWVER = 35,
    SQL_DESC_SCHEMA_NAME = SQL_COLUMN_OWNER_NAME,
    SQL_DESC_SEARCHABLE = SQL_COLUMN_SEARCHABLE,
    SQL_DESC_TYPE_NAME = SQL_COLUMN_TYPE_NAME,
    SQL_DESC_TABLE_NAME = SQL_COLUMN_TABLE_NAME,
    SQL_DESC_UNSIGNED = SQL_COLUMN_UNSIGNED,
    SQL_DESC_UPDATABLE = SQL_COLUMN_UPDATABLE
}

enum SQL_COLATT_OPT_MAX = DescriptorField.SQL_COLUMN_LABEL;
enum SQL_COLATT_OPT_MIN = DescriptorField.SQL_COLUMN_COUNT;

//SQLColAttributes - SQL_COLUMN_UPDATABLE
enum ColumnUpdatable {
    SQL_ATTR_READONLY = 0,
    SQL_ATTR_WRITE,
    SQL_ATTR_READWRITE_UNKNOWN
}

//SQLColAttributes - SQL_COLUMN_SEARCHABLE
enum SQL_UNSEARCHABLE = 0;
enum SQL_LIKE_ONLY = 1;
enum SQL_ALL_EXCEPT_LIKE = 2;
enum SQL_SEARCHABLE = 3;

//SQLDataSources - additional fetch directions
enum SQL_FETCH_FIRST_USER = 31;
enum SQL_FETCH_FIRST_SYSTEM = 32;

//SQLDriverConnect
enum DriverCompletion : SQLUSMALLINT {
    NOPROMPT = 0,
    COMPLETE,
    PROMPT,
    COMPLETE_REQUIRED
}

//SQLGetConnectAttr
enum ConnectionAttribute : SQLINTEGER {
    SQL_ATTR_AUTO_IPD = 10001,
    SQL_ATTR_METADATA_ID = 10014,
    SQL_ACCESS_MODE = 101,
    SQL_AUTOCOMMIT = 102,
    SQL_LOGIN_TIMEOUT = 103,
    SQL_OPT_TRACE = 104,
    SQL_OPT_TRACEFILE = 105,
    SQL_TRANSLATE_DLL = 106,
    SQL_TRANSLATE_OPTION = 107,
    SQL_TXN_ISOLATION = 108,
    SQL_CURRENT_QUALIFIER = 109,
    SQL_ODBC_CURSORS = 110,
    SQL_QUIET_MODE = 111,
    SQL_PACKET_SIZE = 112,

    SQL_ATTR_ACCESS_MODE = SQL_ACCESS_MODE,
    SQL_ATTR_AUTOCOMMIT = SQL_AUTOCOMMIT,
    SQL_ATTR_CONNECTION_TIMEOUT = 113,
    SQL_ATTR_CURRENT_CATALOG = SQL_CURRENT_QUALIFIER,
    SQL_ATTR_DISCONNECT_BEHAVIOR = 114,
    SQL_ATTR_ENLIST_IN_DTC = 1207,
    SQL_ATTR_ENLIST_IN_XA = 1208,
    SQL_ATTR_LOGIN_TIMEOUT = SQL_LOGIN_TIMEOUT,
    SQL_ATTR_ODBC_CURSORS = SQL_ODBC_CURSORS,
    SQL_ATTR_PACKET_SIZE = SQL_PACKET_SIZE,
    SQL_ATTR_QUIET_MODE = SQL_QUIET_MODE,
    SQL_ATTR_TRACE = SQL_OPT_TRACE,
    SQL_ATTR_TRACEFILE = SQL_OPT_TRACEFILE,
    SQL_ATTR_TRANSLATE_LIB = SQL_TRANSLATE_DLL,
    SQL_ATTR_TRANSLATE_OPTION = SQL_TRANSLATE_OPTION,
    SQL_ATTR_TXN_ISOLATION = SQL_TXN_ISOLATION,

    SQL_ATTR_CONNECTION_DEAD = 1209, //GetConnectAttr only

    SQL_ATTR_ANSI_APP = 115,
}

//These options have no meaning for a 3.0 driver
enum SQL_CONN_OPT_MIN = ConnectionAttribute.SQL_ACCESS_MODE;
enum SQL_CONN_OPT_MAX = ConnectionAttribute.SQL_PACKET_SIZE;
enum SQL_CONNECT_OPT_DRVR_START = 1000;

//SQLGetConnectAttr - SQL_ACCESS_MODE
enum SQL_MODE_READ_WRITE = 0UL;
enum SQL_MODE_READ_ONLY = 1UL;
enum SQL_MODE_DEFAULT = SQL_MODE_READ_WRITE;

//SQLGetConnectAttr - SQL_AUTOCOMMIT
enum SQL_AUTOCOMMIT_OFF = 0UL;
enum SQL_AUTOCOMMIT_ON = 1UL;
enum SQL_AUTOCOMMIT_DEFAULT = SQL_AUTOCOMMIT_ON;

//SQLGetConnectAttr - SQL_LOGIN_TIMEOUT
enum SQL_LOGIN_TIMEOUT_DEFAULT = 15UL;

//SQLGetConnectAttr - SQL_ODBC_CURSORS
enum SQL_CUR_USE_IF_NEEDED = 0UL;
enum SQL_CUR_USE_ODBC = 1UL;
enum SQL_CUR_USE_DRIVER = 2UL;
enum SQL_CUR_DEFAULT = SQL_CUR_USE_DRIVER;

//SQLGetConnectAttr - SQL_OPT_TRACE
enum SQL_OPT_TRACE_OFF = 0UL;
enum SQL_OPT_TRACE_ON = 1UL;
enum SQL_OPT_TRACE_DEFAULT = SQL_OPT_TRACE_OFF;
version (Windows) {
    enum SQL_OPT_TRACE_FILE_DEFAULT = "\\SQL.LOG";
} else {
    enum SQL_OPT_TRACE_FILE_DEFAULT = "/tmp/odbc.log";
}

//SQLGetConnectAttr - SQL_ATTR_ANSI_APP
enum SQL_AA_TRUE = 1L;  //ANSI app
enum SQL_AA_FALSE = 0L;  //Unicode app

//SQLGetConnectAttr - SQL_ATTR_CONNECTION_DEAD
enum SQL_CD_TRUE = 1L; //closed/dead
enum SQL_CD_FALSE = 0L; //open/available

//SQLGetConnectAttr - SQL_ATTR_DISCONNECT_BEHAVIOR
enum SQL_DB_RETURN_TO_POOL = 0UL;
enum SQL_DB_DISCONNECT = 1UL;
enum SQL_DB_DEFAULT = SQL_DB_RETURN_TO_POOL;

//SQLGetConnectAttr - SQL_ATTR_ENLIST_IN_DTC
enum SQL_DTC_DONE = 0L;

//SQLGetDiagField - defines for diagnostics fields
enum SQL_DIAG_CURSOR_ROW_COUNT = -1249;
enum SQL_DIAG_ROW_NUMBER = -1248;
enum SQL_DIAG_COLUMN_NUMBER = -1247;

//SQLGetDiagField  - SQL_DIAG_ROW_NUMBER and SQL_DIAG_COLUMN_NUMBER
enum SQL_NO_ROW_NUMBER = -1;
enum SQL_NO_COLUMN_NUMBER = -1;
enum SQL_ROW_NUMBER_UNKNOWN = -2;
enum SQL_COLUMN_NUMBER_UNKNOWN = -2;

//SQLGetEnvAttr - SQL_ATTR_ODBC_VERSION
enum SQL_OV_ODBC2 = 2;
enum SQL_OV_ODBC3 = 3;

//SQLGetEnvAttr - SQL_ATTR_CONNECTION_POOLING
enum SQL_CP_OFF = 0UL;
enum SQL_CP_ONE_PER_DRIVER = 1UL;
enum SQL_CP_ONE_PER_HENV = 2UL;
enum SQL_CP_DEFAULT = SQL_CP_OFF;

//SQLGetEnvAttr - SQL_ATTR_CP_MATCH
enum SQL_CP_STRICT_MATCH = 0UL;
enum SQL_CP_RELAXED_MATCH = 1UL;
enum SQL_CP_MATCH_DEFAULT = SQL_CP_STRICT_MATCH;

//SQLGetFunctions - extensions to the X/Open specification
enum SQL_API_SQLALLOCHANDLESTD = 73;
enum SQL_API_SQLBULKOPERATIONS = 24;
enum SQL_API_SQLBINDPARAMETER = 72;
enum SQL_API_SQLBROWSECONNECT = 55;
enum SQL_API_SQLCOLATTRIBUTES = 6;
enum SQL_API_SQLCOLUMNPRIVILEGES = 56;
enum SQL_API_SQLDESCRIBEPARAM = 58;
enum SQL_API_SQLDRIVERCONNECT = 41;
enum SQL_API_SQLDRIVERS = 71;
enum SQL_API_SQLEXTENDEDFETCH = 59;
enum SQL_API_SQLFOREIGNKEYS = 60;
enum SQL_API_SQLMORERESULTS = 61;
enum SQL_API_SQLNATIVESQL = 62;
enum SQL_API_SQLNUMPARAMS = 63;
enum SQL_API_SQLPARAMOPTIONS = 64;
enum SQL_API_SQLPRIMARYKEYS = 65;
enum SQL_API_SQLPROCEDURECOLUMNS = 66;
enum SQL_API_SQLPROCEDURES = 67;
enum SQL_API_SQLSETPOS = 68;
enum SQL_API_SQLSETSCROLLOPTIONS = 69;
enum SQL_API_SQLTABLEPRIVILEGES = 70;

//SQLGetFunctions - ODBC version 2.x and earlier
enum SQL_API_ALL_FUNCTIONS = 0;

//Loading by ordinal is not supported for 3.0 and above drivers
enum SQL_API_LOADBYORDINAL = 199;

//SQLGetFunctions - SQL_API_ODBC3_ALL_FUNCTIONS
enum SQL_API_ODBC3_ALL_FUNCTIONS = 999;
enum SQL_API_ODBC3_ALL_FUNCTIONS_SIZE = 250;

auto SQL_FUNC_EXISTS(T1, T2)(T1 pfExists, T2 uwAPI) {
    auto ptr = cast(UWORD*)(pfExists);
    auto offset = uwAPI >> 4;
    auto mask = 1 << (uwAPI & 0x000F);
    auto value = *(ptr + offset) & mask;
    return value ? SQL_TRUE : SQL_FALSE;
}

enum SQL_DTC_TRANSITION_COST = 1750;

//SQLGetInfo - SQL_AGGREGATE_FUNCTIONS
enum SQLUINTEGER SQL_AF_AVG = 0x00000001L;
enum SQLUINTEGER SQL_AF_COUNT = 0x00000002L;
enum SQLUINTEGER SQL_AF_MAX = 0x00000004L;
enum SQLUINTEGER SQL_AF_MIN = 0x00000008L;
enum SQLUINTEGER SQL_AF_SUM = 0x00000010L;
enum SQLUINTEGER SQL_AF_DISTINCT = 0x00000020L;
enum SQLUINTEGER SQL_AF_ALL = 0x00000040L;

//SQLGetInfo - SQL_ALTER_DOMAIN
enum SQL_AD_CONSTRAINT_NAME_DEFINITION = 0x00000001L;
enum SQL_AD_ADD_DOMAIN_CONSTRAINT = 0x00000002L;
enum SQL_AD_DROP_DOMAIN_CONSTRAINT = 0x00000004L;
enum SQL_AD_ADD_DOMAIN_DEFAULT = 0x00000008L;
enum SQL_AD_DROP_DOMAIN_DEFAULT = 0x00000010L;
enum SQL_AD_ADD_CONSTRAINT_INITIALLY_DEFERRED = 0x00000020L;
enum SQL_AD_ADD_CONSTRAINT_INITIALLY_IMMEDIATE = 0x00000040L;
enum SQL_AD_ADD_CONSTRAINT_DEFERRABLE = 0x00000080L;
enum SQL_AD_ADD_CONSTRAINT_NON_DEFERRABLE = 0x00000100L;

//SQLGetInfo - SQL_ASYNC_MODE
enum SQL_AM_NONE = 0;
enum SQL_AM_CONNECTION = 1;
enum SQL_AM_STATEMENT = 2;

//SQLGetInfo - SQL_BATCH_ROW_COUNT
enum SQL_BRC_PROCEDURES = 0x0000001;
enum SQL_BRC_EXPLICIT = 0x0000002;
enum SQL_BRC_ROLLED_UP = 0x0000004;

//SQLGetInfo - SQL_BATCH_SUPPORT
enum SQL_BS_SELECT_EXPLICIT = 0x00000001L;
enum SQL_BS_ROW_COUNT_EXPLICIT = 0x00000002L;
enum SQL_BS_SELECT_PROC = 0x00000004L;
enum SQL_BS_ROW_COUNT_PROC = 0x00000008L;

//SQLGetInfo - SQL_BOOKMARK_PERSISTENCE
enum SQL_BP_CLOSE = 0x00000001L;
enum SQL_BP_DELETE = 0x00000002L;
enum SQL_BP_DROP = 0x00000004L;
enum SQL_BP_TRANSACTION = 0x00000008L;
enum SQL_BP_UPDATE = 0x00000010L;
enum SQL_BP_OTHER_HSTMT = 0x00000020L;
enum SQL_BP_SCROLL = 0x00000040L;

//SQL_CATALOG_LOCATION values
enum SQL_CL_START = SQL_QL_START;
enum SQL_CL_END = SQL_QL_END;

//SQLGetInfo - SQL_CATALOG_USAGE
enum SQLUINTEGER SQL_CU_DML_STATEMENTS = SQL_QU_DML_STATEMENTS;
enum SQLUINTEGER SQL_CU_PROCEDURE_INVOCATION = SQL_QU_PROCEDURE_INVOCATION;
enum SQLUINTEGER SQL_CU_TABLE_DEFINITION = SQL_QU_TABLE_DEFINITION;
enum SQLUINTEGER SQL_CU_INDEX_DEFINITION = SQL_QU_INDEX_DEFINITION;
enum SQLUINTEGER SQL_CU_PRIVILEGE_DEFINITION = SQL_QU_PRIVILEGE_DEFINITION;

//SQLGetInfo - SQL_CONCAT_NULL_BEHAVIOR
enum SQL_CB_NULL = 0x0000;
enum SQL_CB_NON_NULL = 0x0001;

//SQLGetInfo - SQL_CONVERT_* bitmask values
enum SQLUINTEGER SQL_CVT_CHAR = 0x00000001L;
enum SQLUINTEGER SQL_CVT_NUMERIC = 0x00000002L;
enum SQLUINTEGER SQL_CVT_DECIMAL = 0x00000004L;
enum SQLUINTEGER SQL_CVT_INTEGER = 0x00000008L;
enum SQLUINTEGER SQL_CVT_SMALLINT = 0x00000010L;
enum SQLUINTEGER SQL_CVT_FLOAT = 0x00000020L;
enum SQLUINTEGER SQL_CVT_REAL = 0x00000040L;
enum SQLUINTEGER SQL_CVT_DOUBLE = 0x00000080L;
enum SQLUINTEGER SQL_CVT_VARCHAR = 0x00000100L;
enum SQLUINTEGER SQL_CVT_LONGVARCHAR = 0x00000200L;
enum SQLUINTEGER SQL_CVT_BINARY = 0x00000400L;
enum SQLUINTEGER SQL_CVT_VARBINARY = 0x00000800L;
enum SQLUINTEGER SQL_CVT_BIT = 0x00001000L;
enum SQLUINTEGER SQL_CVT_TINYINT = 0x00002000L;
enum SQLUINTEGER SQL_CVT_BIGINT = 0x00004000L;
enum SQLUINTEGER SQL_CVT_DATE = 0x00008000L;
enum SQLUINTEGER SQL_CVT_TIME = 0x00010000L;
enum SQLUINTEGER SQL_CVT_TIMESTAMP = 0x00020000L;
enum SQLUINTEGER SQL_CVT_LONGVARBINARY = 0x00040000L;
enum SQLUINTEGER SQL_CVT_INTERVAL_YEAR_MONTH = 0x00080000L;
enum SQLUINTEGER SQL_CVT_INTERVAL_DAY_TIME = 0x00100000L;
enum SQLUINTEGER SQL_CVT_WCHAR = 0x00200000L;
enum SQLUINTEGER SQL_CVT_WLONGVARCHAR = 0x00400000L;
enum SQLUINTEGER SQL_CVT_WVARCHAR = 0x00800000L;

//SQLGetInfo - SQL_CONVERT_FUNCTIONS
enum SQLUINTEGER SQL_FN_CVT_CONVERT = 0x00000001L;
enum SQLUINTEGER SQL_FN_CVT_CAST = 0x00000002L;

//SQLGetInfo - SQL_CORRELATION_NAME
enum SQL_CN_NONE = 0x0000;
enum SQL_CN_DIFFERENT = 0x0001;
enum SQL_CN_ANY = 0x0002;

//SQLGetInfo - SQL_CREATE_ASSERTION
enum SQL_CA_CREATE_ASSERTION = 0x00000001L;
enum SQL_CA_CONSTRAINT_INITIALLY_DEFERRED = 0x00000010L;
enum SQL_CA_CONSTRAINT_INITIALLY_IMMEDIATE = 0x00000020L;
enum SQL_CA_CONSTRAINT_DEFERRABLE = 0x00000040L;
enum SQL_CA_CONSTRAINT_NON_DEFERRABLE = 0x00000080L;

//SQLGetInfo - SQL_CREATE_CHARACTER_SET
enum SQL_CCS_CREATE_CHARACTER_SET = 0x00000001L;
enum SQL_CCS_COLLATE_CLAUSE = 0x00000002L;
enum SQL_CCS_LIMITED_COLLATION = 0x00000004L;

//SQLGetInfo - SQL_CREATE_COLLATION
enum SQL_CCOL_CREATE_COLLATION = 0x00000001L;

//SQLGetInfo - SQL_CREATE_DOMAIN
enum SQL_CDO_CREATE_DOMAIN = 0x00000001L;
enum SQL_CDO_DEFAULT = 0x00000002L;
enum SQL_CDO_CONSTRAINT = 0x00000004L;
enum SQL_CDO_COLLATION = 0x00000008L;
enum SQL_CDO_CONSTRAINT_NAME_DEFINITION = 0x00000010L;
enum SQL_CDO_CONSTRAINT_INITIALLY_DEFERRED = 0x00000020L;
enum SQL_CDO_CONSTRAINT_INITIALLY_IMMEDIATE = 0x00000040L;
enum SQL_CDO_CONSTRAINT_DEFERRABLE = 0x00000080L;
enum SQL_CDO_CONSTRAINT_NON_DEFERRABLE = 0x00000100L;

//SQLGetInfo - SQL_CREATE_SCHEMA
enum SQL_CS_CREATE_SCHEMA = 0x00000001L;
enum SQL_CS_AUTHORIZATION = 0x00000002L;
enum SQL_CS_DEFAULT_CHARACTER_SET = 0x00000004L;

//SQLGetInfo - SQL_CREATE_TABLE
enum SQL_CT_CREATE_TABLE = 0x00000001L;
enum SQL_CT_COMMIT_PRESERVE = 0x00000002L;
enum SQL_CT_COMMIT_DELETE = 0x00000004L;
enum SQL_CT_GLOBAL_TEMPORARY = 0x00000008L;
enum SQL_CT_LOCAL_TEMPORARY = 0x00000010L;
enum SQL_CT_CONSTRAINT_INITIALLY_DEFERRED = 0x00000020L;
enum SQL_CT_CONSTRAINT_INITIALLY_IMMEDIATE = 0x00000040L;
enum SQL_CT_CONSTRAINT_DEFERRABLE = 0x00000080L;
enum SQL_CT_CONSTRAINT_NON_DEFERRABLE = 0x00000100L;
enum SQL_CT_COLUMN_CONSTRAINT = 0x00000200L;
enum SQL_CT_COLUMN_DEFAULT = 0x00000400L;
enum SQL_CT_COLUMN_COLLATION = 0x00000800L;
enum SQL_CT_TABLE_CONSTRAINT = 0x00001000L;
enum SQL_CT_CONSTRAINT_NAME_DEFINITION = 0x00002000L;

//SQLGetInfo - SQL_CREATE_TRANSLATION
enum SQL_CTR_CREATE_TRANSLATION = 0x00000001L;

//SQLGetInfo - SQL_CREATE_VIEW
enum SQL_CV_CREATE_VIEW = 0x00000001L;
enum SQL_CV_CHECK_OPTION = 0x00000002L;
enum SQL_CV_CASCADED = 0x00000004L;
enum SQL_CV_LOCAL = 0x00000008L;

//SQLGetInfo - SQL_DATETIME_LITERALS
enum SQLUINTEGER SQL_DL_SQL92_DATE = 0x00000001L;
enum SQLUINTEGER SQL_DL_SQL92_TIME = 0x00000002L;
enum SQLUINTEGER SQL_DL_SQL92_TIMESTAMP = 0x00000004L;
enum SQLUINTEGER SQL_DL_SQL92_INTERVAL_YEAR = 0x00000008L;
enum SQLUINTEGER SQL_DL_SQL92_INTERVAL_MONTH = 0x00000010L;
enum SQLUINTEGER SQL_DL_SQL92_INTERVAL_DAY = 0x00000020L;
enum SQLUINTEGER SQL_DL_SQL92_INTERVAL_HOUR = 0x00000040L;
enum SQLUINTEGER SQL_DL_SQL92_INTERVAL_MINUTE = 0x00000080L;
enum SQLUINTEGER SQL_DL_SQL92_INTERVAL_SECOND = 0x00000100L;
enum SQLUINTEGER SQL_DL_SQL92_INTERVAL_YEAR_TO_MONTH = 0x00000200L;
enum SQLUINTEGER SQL_DL_SQL92_INTERVAL_DAY_TO_HOUR = 0x00000400L;
enum SQLUINTEGER SQL_DL_SQL92_INTERVAL_DAY_TO_MINUTE = 0x00000800L;
enum SQLUINTEGER SQL_DL_SQL92_INTERVAL_DAY_TO_SECOND = 0x00001000L;
enum SQLUINTEGER SQL_DL_SQL92_INTERVAL_HOUR_TO_MINUTE = 0x00002000L;
enum SQLUINTEGER SQL_DL_SQL92_INTERVAL_HOUR_TO_SECOND = 0x00004000L;
enum SQLUINTEGER SQL_DL_SQL92_INTERVAL_MINUTE_TO_SECOND = 0x00008000L;

//SQLGetInfo - SQL_DDL_INDEX
enum SQL_DI_CREATE_INDEX = 0x00000001L;
enum SQL_DI_DROP_INDEX = 0x00000002L;

//SQLGetInfo - SQL_DROP_ASSERTION
enum SQL_DA_DROP_ASSERTION = 0x00000001L;

//SQLGetInfo - SQL_DROP_CHARACTER_SET
enum SQL_DCS_DROP_CHARACTER_SET = 0x00000001L;

//SQLGetInfo - SQL_DROP_COLLATION
enum SQL_DC_DROP_COLLATION = 0x00000001L;

//SQLGetInfo - SQL_DROP_DOMAIN
enum SQL_DD_DROP_DOMAIN = 0x00000001L;
enum SQL_DD_RESTRICT = 0x00000002L;
enum SQL_DD_CASCADE = 0x00000004L;

//SQLGetInfo - SQL_DROP_SCHEMA
enum SQL_DS_DROP_SCHEMA = 0x00000001L;
enum SQL_DS_RESTRICT = 0x00000002L;
enum SQL_DS_CASCADE = 0x00000004L;

//SQLGetInfo - SQL_DROP_TABLE
enum SQL_DT_DROP_TABLE = 0x00000001L;
enum SQL_DT_RESTRICT = 0x00000002L;
enum SQL_DT_CASCADE = 0x00000004L;

//SQLGetInfo - SQL_DROP_TRANSLATION
enum SQL_DTR_DROP_TRANSLATION = 0x00000001L;

//SQLGetInfo - SQL_DROP_VIEW
enum SQL_DV_DROP_VIEW = 0x00000001L;
enum SQL_DV_RESTRICT = 0x00000002L;
enum SQL_DV_CASCADE = 0x00000004L;

//SQLGetInfo - SQL_DTC_TRANSITION_COST
enum SQL_DTC_ENLIST_EXPENSIVE = 0x00000001L;
enum SQL_DTC_UNENLIST_EXPENSIVE = 0x00000002L;

/*
 *  SQLGetInfo - SQL_DYNAMIC_CURSOR_ATTRIBUTES1
 *  SQLGetInfo - SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES1
 *  SQLGetInfo - SQL_KEYSET_CURSOR_ATTRIBUTES1
 *  SQLGetInfo - SQL_STATIC_CURSOR_ATTRIBUTES1
 */
//SQLFetchScroll - FetchOrientation
enum SQL_CA1_NEXT = 0x00000001L;
enum SQL_CA1_ABSOLUTE = 0x00000002L;
enum SQL_CA1_RELATIVE = 0x00000004L;
enum SQL_CA1_BOOKMARK = 0x00000008L;

//SQLSetPos - LockType
enum SQL_CA1_LOCK_NO_CHANGE = 0x00000040L;
enum SQL_CA1_LOCK_EXCLUSIVE = 0x00000080L;
enum SQL_CA1_LOCK_UNLOCK = 0x00000100L;

//SQLSetPos Operations
enum int SQL_CA1_POS_POSITION = 0x00000200L;
enum int SQL_CA1_POS_UPDATE = 0x00000400L;
enum int SQL_CA1_POS_DELETE = 0x00000800L;
enum int SQL_CA1_POS_REFRESH = 0x00001000L;

//positioned updates and deletes
enum SQL_CA1_POSITIONED_UPDATE = 0x00002000L;
enum SQL_CA1_POSITIONED_DELETE = 0x00004000L;
enum SQL_CA1_SELECT_FOR_UPDATE = 0x00008000L;

//SQLBulkOperations operations
enum SQL_CA1_BULK_ADD = 0x00010000L;
enum SQL_CA1_BULK_UPDATE_BY_BOOKMARK = 0x00020000L;
enum SQL_CA1_BULK_DELETE_BY_BOOKMARK = 0x00040000L;
enum SQL_CA1_BULK_FETCH_BY_BOOKMARK = 0x00080000L;

/*
 *  SQLGetInfo - SQL_DYNAMIC_CURSOR_ATTRIBUTES2
 *  SQLGetInfo - SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES2
 *  SQLGetInfo - SQL_KEYSET_CURSOR_ATTRIBUTES2
 *  SQLGetInfo - SQL_STATIC_CURSOR_ATTRIBUTES2
 */
//SQL_ATTR_SCROLL_CONCURRENCY
enum SQL_CA2_READ_ONLY_CONCURRENCY = 0x00000001L;
enum SQL_CA2_LOCK_CONCURRENCY = 0x00000002L;
enum SQL_CA2_OPT_ROWVER_CONCURRENCY = 0x00000004L;
enum SQL_CA2_OPT_VALUES_CONCURRENCY = 0x00000008L;

//sensitivity of the cursor to its own inserts, deletes, and updates
enum SQL_CA2_SENSITIVITY_ADDITIONS = 0x00000010L;
enum SQL_CA2_SENSITIVITY_DELETIONS = 0x00000020L;
enum SQL_CA2_SENSITIVITY_UPDATES = 0x00000040L;

//SQL_ATTR_MAX_ROWS
enum SQL_CA2_MAX_ROWS_SELECT = 0x00000080L;
enum SQL_CA2_MAX_ROWS_INSERT = 0x00000100L;
enum SQL_CA2_MAX_ROWS_DELETE = 0x00000200L;
enum SQL_CA2_MAX_ROWS_UPDATE = 0x00000400L;
enum SQL_CA2_MAX_ROWS_CATALOG = 0x00000800L;
enum SQL_CA2_MAX_ROWS_AFFECTS_ALL = (SQL_CA2_MAX_ROWS_SELECT |
                                     SQL_CA2_MAX_ROWS_INSERT | SQL_CA2_MAX_ROWS_DELETE |
                                     SQL_CA2_MAX_ROWS_UPDATE | SQL_CA2_MAX_ROWS_CATALOG);

//SQL_DIAG_CURSOR_ROW_COUNT
enum SQL_CA2_CRC_EXACT = 0x00001000L;
enum SQL_CA2_CRC_APPROXIMATE = 0x00002000L;

//the kinds of positioned statements that can be simulated
enum SQL_CA2_SIMULATE_NON_UNIQUE = 0x00004000L;
enum SQL_CA2_SIMULATE_TRY_UNIQUE = 0x00008000L;
enum SQL_CA2_SIMULATE_UNIQUE = 0x00010000L;

//SQLGetInfo - SQL_FETCH_DIRECTION
enum SQL_FD_FETCH_BOOKMARK = 0x00000080L;

//SQLGetInfo - SQL_FILE_USAGE
enum SQL_FILE_NOT_SUPPORTED = 0x0000;
enum SQL_FILE_TABLE = 0x0001;
enum SQL_FILE_QUALIFIER = 0x0002;
enum SQL_FILE_CATALOG = SQL_FILE_QUALIFIER;

//SQLGetInfo - SQL_GETDATA_EXTENSIONS
enum SQL_GD_BLOCK = 0x00000004L;
enum SQL_GD_BOUND = 0x00000008L;
enum SQL_GD_OUTPUT_PARAMS = 0x00000010L;

//SQLGetInfo - SQL_GROUP_BY
enum SQL_GB_NOT_SUPPORTED = 0x0000;
enum SQL_GB_GROUP_BY_EQUALS_SELECT = 0x0001;
enum SQL_GB_GROUP_BY_CONTAINS_SELECT = 0x0002;
enum SQL_GB_NO_RELATION = 0x0003;
enum SQL_GB_COLLATE = 0x0004;

//SQLGetInfo - SQL_INDEX_KEYWORDS
enum SQL_IK_NONE = 0x00000000L;
enum SQL_IK_ASC = 0x00000001L;
enum SQL_IK_DESC = 0x00000002L;
enum SQL_IK_ALL = SQL_IK_ASC | SQL_IK_DESC;

//SQLGetInfo - SQL_INFO_SCHEMA_VIEWS
enum SQL_ISV_ASSERTIONS = 0x00000001L;
enum SQL_ISV_CHARACTER_SETS = 0x00000002L;
enum SQL_ISV_CHECK_CONSTRAINTS = 0x00000004L;
enum SQL_ISV_COLLATIONS = 0x00000008L;
enum SQL_ISV_COLUMN_DOMAIN_USAGE = 0x00000010L;
enum SQL_ISV_COLUMN_PRIVILEGES = 0x00000020L;
enum SQL_ISV_COLUMNS = 0x00000040L;
enum SQL_ISV_CONSTRAINT_COLUMN_USAGE = 0x00000080L;
enum SQL_ISV_CONSTRAINT_TABLE_USAGE = 0x00000100L;
enum SQL_ISV_DOMAIN_CONSTRAINTS = 0x00000200L;
enum SQL_ISV_DOMAINS = 0x00000400L;
enum SQL_ISV_KEY_COLUMN_USAGE = 0x00000800L;
enum SQL_ISV_REFERENTIAL_CONSTRAINTS = 0x00001000L;
enum SQL_ISV_SCHEMATA = 0x00002000L;
enum SQL_ISV_SQL_LANGUAGES = 0x00004000L;
enum SQL_ISV_TABLE_CONSTRAINTS = 0x00008000L;
enum SQL_ISV_TABLE_PRIVILEGES = 0x00010000L;
enum SQL_ISV_TABLES = 0x00020000L;
enum SQL_ISV_TRANSLATIONS = 0x00040000L;
enum SQL_ISV_USAGE_PRIVILEGES = 0x00080000L;
enum SQL_ISV_VIEW_COLUMN_USAGE = 0x00100000L;
enum SQL_ISV_VIEW_TABLE_USAGE = 0x00200000L;
enum SQL_ISV_VIEWS = 0x00400000L;

//SQLGetInfo - SQL_INFO_SCHEMA_VIEWS
enum SQL_IS_INSERT_LITERALS = 0x00000001L;
enum SQL_IS_INSERT_SEARCHED = 0x00000002L;
enum SQL_IS_SELECT_INTO = 0x00000004L;

//SQLGetInfo - SQL_LOCK_TYPES
enum SQL_LCK_NO_CHANGE = 0x00000001L;
enum SQL_LCK_EXCLUSIVE = 0x00000002L;
enum SQL_LCK_UNLOCK = 0x00000004L;

//SQLGetInfo - SQL_POS_OPERATIONS
enum SQL_POS_POSITION = 0x00000001L;
enum SQL_POS_REFRESH = 0x00000002L;
enum SQL_POS_UPDATE = 0x00000004L;
enum SQL_POS_DELETE = 0x00000008L;
enum SQL_POS_ADD = 0x00000010L;

//SQLGetInfo - SQL_NON_NULLABLE_COLUMNS
enum SQL_NNC_NULL = 0x0000;
enum SQL_NNC_NON_NULL = 0x0001;

//SQLGetInfo - SQL_NULL_COLLATION
enum SQL_NC_START = 0x0002;
enum SQL_NC_END = 0x0004;

//SQLGetInfo - SQL_NUMERIC_FUNCTIONS
enum SQLUINTEGER SQL_FN_NUM_ABS = 0x00000001L;
enum SQLUINTEGER SQL_FN_NUM_ACOS = 0x00000002L;
enum SQLUINTEGER SQL_FN_NUM_ASIN = 0x00000004L;
enum SQLUINTEGER SQL_FN_NUM_ATAN = 0x00000008L;
enum SQLUINTEGER SQL_FN_NUM_ATAN2 = 0x00000010L;
enum SQLUINTEGER SQL_FN_NUM_CEILING = 0x00000020L;
enum SQLUINTEGER SQL_FN_NUM_COS = 0x00000040L;
enum SQLUINTEGER SQL_FN_NUM_COT = 0x00000080L;
enum SQLUINTEGER SQL_FN_NUM_EXP = 0x00000100L;
enum SQLUINTEGER SQL_FN_NUM_FLOOR = 0x00000200L;
enum SQLUINTEGER SQL_FN_NUM_LOG = 0x00000400L;
enum SQLUINTEGER SQL_FN_NUM_MOD = 0x00000800L;
enum SQLUINTEGER SQL_FN_NUM_SIGN = 0x00001000L;
enum SQLUINTEGER SQL_FN_NUM_SIN = 0x00002000L;
enum SQLUINTEGER SQL_FN_NUM_SQRT = 0x00004000L;
enum SQLUINTEGER SQL_FN_NUM_TAN = 0x00008000L;
enum SQLUINTEGER SQL_FN_NUM_PI = 0x00010000L;
enum SQLUINTEGER SQL_FN_NUM_RAND = 0x00020000L;
enum SQLUINTEGER SQL_FN_NUM_DEGREES = 0x00040000L;
enum SQLUINTEGER SQL_FN_NUM_LOG10 = 0x00080000L;
enum SQLUINTEGER SQL_FN_NUM_POWER = 0x00100000L;
enum SQLUINTEGER SQL_FN_NUM_RADIANS = 0x00200000L;
enum SQLUINTEGER SQL_FN_NUM_ROUND = 0x00400000L;
enum SQLUINTEGER SQL_FN_NUM_TRUNCATE = 0x00800000L;

//SQLGetInfo - SQL_ODBC_API_CONFORMANCE
enum SQLSMALLINT SQL_OAC_NONE = 0x0000;
enum SQLSMALLINT SQL_OAC_LEVEL1 = 0x0001;
enum SQLSMALLINT SQL_OAC_LEVEL2 = 0x0002;

//SQLGetInfo - SQL_ODBC_INTERFACE_CONFORMANCE
enum SQL_OIC_CORE = 1UL;
enum SQL_OIC_LEVEL1 = 2UL;
enum SQL_OIC_LEVEL2 = 3UL;

////SQLGetInfo - SQL_ODBC_SAG_CLI_CONFORMANCE
enum SQLUINTEGER SQL_OSCC_NOT_COMPLIANT = 0x0000;
enum SQLUINTEGER SQL_OSCC_COMPLIANT = 0x0001;

//SQLGetInfo - SQL_ODBC_SQL_CONFORMANCE
enum SQLSMALLINT SQL_OSC_MINIMUM = 0x0000;
enum SQLSMALLINT SQL_OSC_CORE = 0x0001;
enum SQLSMALLINT SQL_OSC_EXTENDED = 0x0002;

//SQLGetInfo - SQL_OWNER_USAGE
enum SQL_OU_DML_STATEMENTS = 0x00000001L;
enum SQL_OU_PROCEDURE_INVOCATION = 0x00000002L;
enum SQL_OU_TABLE_DEFINITION = 0x00000004L;
enum SQL_OU_INDEX_DEFINITION = 0x00000008L;
enum SQL_OU_PRIVILEGE_DEFINITION = 0x00000010L;

//SQLGetInfo - SQL_PARAM_ARRAY_ROW_COUNTS
enum SQL_PARC_BATCH = 1;
enum SQL_PARC_NO_BATCH = 2;

//SQLGetInfo - SQL_PARAM_ARRAY_SELECTS
enum SQL_PAS_BATCH = 1;
enum SQL_PAS_NO_BATCH = 2;
enum SQL_PAS_NO_SELECT = 3;

//SQLGetInfo - SQL_POSITIONED_STATEMENTS
enum SQL_PS_POSITIONED_DELETE = 0x00000001L;
enum SQL_PS_POSITIONED_UPDATE = 0x00000002L;
enum SQL_PS_SELECT_FOR_UPDATE = 0x00000004L;

//SQLGetInfo - SQL_QUALIFIER_LOCATION
enum SQL_QL_START = 0x0001;
enum SQL_QL_END = 0x0002;

//SQLGetInfo - SQL_QUALIFIER_USAGE
enum SQLUINTEGER SQL_QU_DML_STATEMENTS = 0x00000001L;
enum SQLUINTEGER SQL_QU_PROCEDURE_INVOCATION = 0x00000002L;
enum SQLUINTEGER SQL_QU_TABLE_DEFINITION = 0x00000004L;
enum SQLUINTEGER SQL_QU_INDEX_DEFINITION = 0x00000008L;
enum SQLUINTEGER SQL_QU_PRIVILEGE_DEFINITION = 0x00000010L;

//SQLGetInfo - SQL_SCHEMA_USAGE
enum SQLUINTEGER SQL_SU_DML_STATEMENTS = SQL_OU_DML_STATEMENTS;
enum SQLUINTEGER SQL_SU_PROCEDURE_INVOCATION = SQL_OU_PROCEDURE_INVOCATION;
enum SQLUINTEGER SQL_SU_TABLE_DEFINITION = SQL_OU_TABLE_DEFINITION;
enum SQLUINTEGER SQL_SU_INDEX_DEFINITION = SQL_OU_INDEX_DEFINITION;
enum SQLUINTEGER SQL_SU_PRIVILEGE_DEFINITION = SQL_OU_PRIVILEGE_DEFINITION;

//SQLGetInfo - SQL_SCROLL_OPTIONS
enum SQL_SO_FORWARD_ONLY = 0x00000001L;
enum SQL_SO_KEYSET_DRIVEN = 0x00000002L;
enum SQL_SO_DYNAMIC = 0x00000004L;
enum SQL_SO_MIXED = 0x00000008L;
enum SQL_SO_STATIC = 0x00000010L;

//SQLGetInfo - SQL_SQL_CONFORMANCE
enum SQL_SC_SQL92_ENTRY = 0x00000001L;
enum SQL_SC_FIPS127_2_TRANSITIONAL = 0x00000002L;
enum SQL_SC_SQL92_INTERMEDIATE = 0x00000004L;
enum SQL_SC_SQL92_FULL = 0x00000008L;

//SQLGetInfo - SQL_SQL92_DATETIME_FUNCTIONS
enum SQLUINTEGER SQL_SDF_CURRENT_DATE = 0x00000001L;
enum SQLUINTEGER SQL_SDF_CURRENT_TIME = 0x00000002L;
enum SQLUINTEGER SQL_SDF_CURRENT_TIMESTAMP = 0x00000004L;

//SQLGetInfo - SQL_SQL92_FOREIGN_KEY_DELETE_RULE
enum SQL_SFKD_CASCADE = 0x00000001L;
enum SQL_SFKD_NO_ACTION = 0x00000002L;
enum SQL_SFKD_SET_DEFAULT = 0x00000004L;
enum SQL_SFKD_SET_NULL = 0x00000008L;

//SQLGetInfo - SQL_SQL92_FOREIGN_KEY_UPDATE_RULE
enum SQL_SFKU_CASCADE = 0x00000001L;
enum SQL_SFKU_NO_ACTION = 0x00000002L;
enum SQL_SFKU_SET_DEFAULT = 0x00000004L;
enum SQL_SFKU_SET_NULL = 0x00000008L;

//SQLGetInfo - SQL_SQL92_GRANT
enum SQL_SG_USAGE_ON_DOMAIN = 0x00000001L;
enum SQL_SG_USAGE_ON_CHARACTER_SET = 0x00000002L;
enum SQL_SG_USAGE_ON_COLLATION = 0x00000004L;
enum SQL_SG_USAGE_ON_TRANSLATION = 0x00000008L;
enum SQL_SG_WITH_GRANT_OPTION = 0x00000010L;
enum SQL_SG_DELETE_TABLE = 0x00000020L;
enum SQL_SG_INSERT_TABLE = 0x00000040L;
enum SQL_SG_INSERT_COLUMN = 0x00000080L;
enum SQL_SG_REFERENCES_TABLE = 0x00000100L;
enum SQL_SG_REFERENCES_COLUMN = 0x00000200L;
enum SQL_SG_SELECT_TABLE = 0x00000400L;
enum SQL_SG_UPDATE_TABLE = 0x00000800L;
enum SQL_SG_UPDATE_COLUMN = 0x00001000L;

//SQLGetInfo - SQL_SQL92_NUMERIC_VALUE_FUNCTIONS
enum SQL_SNVF_BIT_LENGTH = 0x00000001L;
enum SQL_SNVF_CHAR_LENGTH = 0x00000002L;
enum SQL_SNVF_CHARACTER_LENGTH = 0x00000004L;
enum SQL_SNVF_EXTRACT = 0x00000008L;
enum SQL_SNVF_OCTET_LENGTH = 0x00000010L;
enum SQL_SNVF_POSITION = 0x00000020L;

//SQLGetInfo - SQL_SQL92_PREDICATES
enum SQL_SP_EXISTS = 0x00000001L;
enum SQL_SP_ISNOTNULL = 0x00000002L;
enum SQL_SP_ISNULL = 0x00000004L;
enum SQL_SP_MATCH_FULL = 0x00000008L;
enum SQL_SP_MATCH_PARTIAL = 0x00000010L;
enum SQL_SP_MATCH_UNIQUE_FULL = 0x00000020L;
enum SQL_SP_MATCH_UNIQUE_PARTIAL = 0x00000040L;
enum SQL_SP_OVERLAPS = 0x00000080L;
enum SQL_SP_UNIQUE = 0x00000100L;
enum SQL_SP_LIKE = 0x00000200L;
enum SQL_SP_IN = 0x00000400L;
enum SQL_SP_BETWEEN = 0x00000800L;
enum SQL_SP_COMPARISON = 0x00001000L;
enum SQL_SP_QUANTIFIED_COMPARISON = 0x00002000L;

//SQLGetInfo - SQL_SQL92_RELATIONAL_JOIN_OPERATORS
enum SQL_SRJO_CORRESPONDING_CLAUSE = 0x00000001L;
enum SQL_SRJO_CROSS_JOIN = 0x00000002L;
enum SQL_SRJO_EXCEPT_JOIN = 0x00000004L;
enum SQL_SRJO_FULL_OUTER_JOIN = 0x00000008L;
enum SQL_SRJO_INNER_JOIN = 0x00000010L;
enum SQL_SRJO_INTERSECT_JOIN = 0x00000020L;
enum SQL_SRJO_LEFT_OUTER_JOIN = 0x00000040L;
enum SQL_SRJO_NATURAL_JOIN = 0x00000080L;
enum SQL_SRJO_RIGHT_OUTER_JOIN = 0x00000100L;
enum SQL_SRJO_UNION_JOIN = 0x00000200L;

//SQLGetInfo - SQL_SQL92_REVOKE
enum SQL_SR_USAGE_ON_DOMAIN = 0x00000001L;
enum SQL_SR_USAGE_ON_CHARACTER_SET = 0x00000002L;
enum SQL_SR_USAGE_ON_COLLATION = 0x00000004L;
enum SQL_SR_USAGE_ON_TRANSLATION = 0x00000008L;
enum SQL_SR_GRANT_OPTION_FOR = 0x00000010L;
enum SQL_SR_CASCADE = 0x00000020L;
enum SQL_SR_RESTRICT = 0x00000040L;
enum SQL_SR_DELETE_TABLE = 0x00000080L;
enum SQL_SR_INSERT_TABLE = 0x00000100L;
enum SQL_SR_INSERT_COLUMN = 0x00000200L;
enum SQL_SR_REFERENCES_TABLE = 0x00000400L;
enum SQL_SR_REFERENCES_COLUMN = 0x00000800L;
enum SQL_SR_SELECT_TABLE = 0x00001000L;
enum SQL_SR_UPDATE_TABLE = 0x00002000L;
enum SQL_SR_UPDATE_COLUMN = 0x00004000L;

//SQLGetInfo - SQL_SQL92_ROW_VALUE_CONSTRUCTOR
enum SQL_SRVC_VALUE_EXPRESSION = 0x00000001L;
enum SQL_SRVC_NULL = 0x00000002L;
enum SQL_SRVC_DEFAULT = 0x00000004L;
enum SQL_SRVC_ROW_SUBQUERY = 0x00000008L;

//SQLGetInfo - SQL_SQL92_STRING_FUNCTIONS
enum SQLUINTEGER SQL_SSF_CONVERT = 0x00000001L;
enum SQLUINTEGER SQL_SSF_LOWER = 0x00000002L;
enum SQLUINTEGER SQL_SSF_UPPER = 0x00000004L;
enum SQLUINTEGER SQL_SSF_SUBSTRING = 0x00000008L;
enum SQLUINTEGER SQL_SSF_TRANSLATE = 0x00000010L;
enum SQLUINTEGER SQL_SSF_TRIM_BOTH = 0x00000020L;
enum SQLUINTEGER SQL_SSF_TRIM_LEADING = 0x00000040L;
enum SQLUINTEGER SQL_SSF_TRIM_TRAILING = 0x00000080L;

//SQLGetInfo - SQL_SQL92_VALUE_EXPRESSIONS
enum SQL_SVE_CASE = 0x00000001L;
enum SQL_SVE_CAST = 0x00000002L;
enum SQL_SVE_COALESCE = 0x00000004L;
enum SQL_SVE_NULLIF = 0x00000008L;

//SQLGetInfo - SQL_STANDARD_CLI_CONFORMANCE
enum SQL_SCC_XOPEN_CLI_VERSION1 = 0x00000001L;
enum SQL_SCC_ISO92_CLI = 0x00000002L;

//SQLGetInfo - SQL_STATIC_SENSITIVITY
enum SQL_SS_ADDITIONS = 0x00000001L;
enum SQL_SS_DELETIONS = 0x00000002L;
enum SQL_SS_UPDATES = 0x00000004L;

//SQLGetInfo - SQL_SUBQUERIES
enum SQL_SQ_COMPARISON = 0x00000001L;
enum SQL_SQ_EXISTS = 0x00000002L;
enum SQL_SQ_IN = 0x00000004L;
enum SQL_SQ_QUANTIFIED = 0x00000008L;
enum SQL_SQ_CORRELATED_SUBQUERIES = 0x00000010L;

//SQLGetInfo - SQL_SYSTEM_FUNCTIONS
enum SQL_FN_SYS_USERNAME = 0x00000001L;
enum SQL_FN_SYS_DBNAME = 0x00000002L;
enum SQL_FN_SYS_IFNULL = 0x00000004L;

//SQLGetInfo - SQL_STRING_FUNCTIONS
enum SQLUINTEGER SQL_FN_STR_CONCAT = 0x00000001L;
enum SQLUINTEGER SQL_FN_STR_INSERT = 0x00000002L;
enum SQLUINTEGER SQL_FN_STR_LEFT = 0x00000004L;
enum SQLUINTEGER SQL_FN_STR_LTRIM = 0x00000008L;
enum SQLUINTEGER SQL_FN_STR_LENGTH = 0x00000010L;
enum SQLUINTEGER SQL_FN_STR_LOCATE = 0x00000020L;
enum SQLUINTEGER SQL_FN_STR_LCASE = 0x00000040L;
enum SQLUINTEGER SQL_FN_STR_REPEAT = 0x00000080L;
enum SQLUINTEGER SQL_FN_STR_REPLACE = 0x00000100L;
enum SQLUINTEGER SQL_FN_STR_RIGHT = 0x00000200L;
enum SQLUINTEGER SQL_FN_STR_RTRIM = 0x00000400L;
enum SQLUINTEGER SQL_FN_STR_SUBSTRING = 0x00000800L;
enum SQLUINTEGER SQL_FN_STR_UCASE = 0x00001000L;
enum SQLUINTEGER SQL_FN_STR_ASCII = 0x00002000L;
enum SQLUINTEGER SQL_FN_STR_CHAR = 0x00004000L;
enum SQLUINTEGER SQL_FN_STR_DIFFERENCE = 0x00008000L;
enum SQLUINTEGER SQL_FN_STR_LOCATE_2 = 0x00010000L;
enum SQLUINTEGER SQL_FN_STR_SOUNDEX = 0x00020000L;
enum SQLUINTEGER SQL_FN_STR_SPACE = 0x00040000L;
enum SQLUINTEGER SQL_FN_STR_BIT_LENGTH = 0x00080000L;
enum SQLUINTEGER SQL_FN_STR_CHAR_LENGTH = 0x00100000L;
enum SQLUINTEGER SQL_FN_STR_CHARACTER_LENGTH = 0x00200000L;
enum SQLUINTEGER SQL_FN_STR_OCTET_LENGTH = 0x00400000L;
enum SQLUINTEGER SQL_FN_STR_POSITION = 0x00800000L;

//SQLGetInfo - SQL_TIMEDATE_ADD_INTERVALS
//SQLGetInfo - SQL_TIMEDATE_DIFF_INTERVALS
enum SQLUINTEGER SQL_FN_TSI_FRAC_SECOND = 0x00000001L;
enum SQLUINTEGER SQL_FN_TSI_SECOND = 0x00000002L;
enum SQLUINTEGER SQL_FN_TSI_MINUTE = 0x00000004L;
enum SQLUINTEGER SQL_FN_TSI_HOUR = 0x00000008L;
enum SQLUINTEGER SQL_FN_TSI_DAY = 0x00000010L;
enum SQLUINTEGER SQL_FN_TSI_WEEK = 0x00000020L;
enum SQLUINTEGER SQL_FN_TSI_MONTH = 0x00000040L;
enum SQLUINTEGER SQL_FN_TSI_QUARTER = 0x00000080L;
enum SQLUINTEGER SQL_FN_TSI_YEAR = 0x00000100L;

//SQLGetInfo - SQL_TIMEDATE_FUNCTIONS
enum SQLUINTEGER SQL_FN_TD_NOW = 0x00000001L;
enum SQLUINTEGER SQL_FN_TD_CURDATE = 0x00000002L;
enum SQLUINTEGER SQL_FN_TD_DAYOFMONTH = 0x00000004L;
enum SQLUINTEGER SQL_FN_TD_DAYOFWEEK = 0x00000008L;
enum SQLUINTEGER SQL_FN_TD_DAYOFYEAR = 0x00000010L;
enum SQLUINTEGER SQL_FN_TD_MONTH = 0x00000020L;
enum SQLUINTEGER SQL_FN_TD_QUARTER = 0x00000040L;
enum SQLUINTEGER SQL_FN_TD_WEEK = 0x00000080L;
enum SQLUINTEGER SQL_FN_TD_YEAR = 0x00000100L;
enum SQLUINTEGER SQL_FN_TD_CURTIME = 0x00000200L;
enum SQLUINTEGER SQL_FN_TD_HOUR = 0x00000400L;
enum SQLUINTEGER SQL_FN_TD_MINUTE = 0x00000800L;
enum SQLUINTEGER SQL_FN_TD_SECOND = 0x00001000L;
enum SQLUINTEGER SQL_FN_TD_TIMESTAMPADD = 0x00002000L;
enum SQLUINTEGER SQL_FN_TD_TIMESTAMPDIFF = 0x00004000L;
enum SQLUINTEGER SQL_FN_TD_DAYNAME = 0x00008000L;
enum SQLUINTEGER SQL_FN_TD_MONTHNAME = 0x00010000L;
enum SQLUINTEGER SQL_FN_TD_CURRENT_DATE = 0x00020000L;
enum SQLUINTEGER SQL_FN_TD_CURRENT_TIME = 0x00040000L;
enum SQLUINTEGER SQL_FN_TD_CURRENT_TIMESTAMP = 0x00080000L;
enum SQLUINTEGER SQL_FN_TD_EXTRACT = 0x00100000L;

//SQLGetInfo - SQL_TXN_ISOLATION_OPTION
enum SQL_TXN_VERSIONING = 0x00000010L;

//SQLGetInfo - SQL_UNION
enum SQL_U_UNION = 0x00000001L;
enum SQL_U_UNION_ALL = 0x00000002L;

//SQLGetInfo - SQL_UNION_STATEMENT
enum SQL_US_UNION = SQL_U_UNION;
enum SQL_US_UNION_ALL = SQL_U_UNION_ALL;

//SQLGetStmtAttr - SQL_ATTR_ASYNC_ENABLE
enum SQL_ASYNC_ENABLE_OFF = 0UL;
enum SQL_ASYNC_ENABLE_ON = 1UL;
enum SQL_ASYNC_ENABLE_DEFAULT = SQL_ASYNC_ENABLE_OFF;

//SQLGetStmtAttr -  SQL_ATTR_PARAM_BIND_TYPE
enum SQL_PARAM_BIND_BY_COLUMN = 0UL;
enum SQL_PARAM_BIND_TYPE_DEFAULT = SQL_PARAM_BIND_BY_COLUMN;

//SQLGetStmtAttr - SQL_BIND_TYPE
enum SQL_BIND_BY_COLUMN = 0UL;
enum SQL_BIND_TYPE_DEFAULT = SQL_BIND_BY_COLUMN;

//SQLGetStmtAttr - SQL_CONCURRENCY
enum SQL_CONCUR_READ_ONLY = 1;
enum SQL_CONCUR_LOCK = 2;
enum SQL_CONCUR_ROWVER = 3;
enum SQL_CONCUR_VALUES = 4;
enum SQL_CONCUR_DEFAULT = SQL_CONCUR_READ_ONLY;

//SQLGetStmtAttr - SQL_CURSOR_TYPE
enum SQL_CURSOR_FORWARD_ONLY = 0UL;
enum SQL_CURSOR_KEYSET_DRIVEN = 1UL;
enum SQL_CURSOR_DYNAMIC = 2UL;
enum SQL_CURSOR_STATIC = 3UL;
enum SQL_CURSOR_TYPE_DEFAULT = SQL_CURSOR_FORWARD_ONLY;

//SQLGetStmtAttr - SQL_KEYSET_SIZE
enum SQL_KEYSET_SIZE_DEFAULT = 0UL;

//SQLGetStmtAttr - SQL_MAX_LENGTH
enum SQL_MAX_LENGTH_DEFAULT = 0UL;

//SQLGetStmtAttr - SQL_MAX_ROWS
enum SQL_MAX_ROWS_DEFAULT = 0UL;

//SQLGetStmtAttr - SQL_NOSCAN
enum SQL_NOSCAN_OFF = 0UL; //False
enum SQL_NOSCAN_ON = 1UL; //True
enum SQL_NOSCAN_DEFAULT = SQL_NOSCAN_OFF;

//SQLGetStmtAttr - SQL_QUERY_TIMEOUT
enum SQL_QUERY_TIMEOUT_DEFAULT = 0UL;

//SQLGetStmtAttr - SQL_RETRIEVE_DATA
enum SQL_RD_OFF = 0UL;
enum SQL_RD_ON = 1UL;
enum SQL_RD_DEFAULT = SQL_RD_ON;

//SQLGetStmtAttr - SQL_ROWSET_SIZE
enum SQL_ROWSET_SIZE_DEFAULT = 1UL;

//SQLGetStmtAttr - SQL_SIMULATE_CURSOR
enum SQL_SC_NON_UNIQUE = 0UL;
enum SQL_SC_TRY_UNIQUE = 1UL;
enum SQL_SC_UNIQUE = 2UL;

//SQLGetStmtAttr - SQL_USE_BOOKMARKS
enum SQL_UB_OFF = 0UL;
enum SQL_UB_ON = 01UL;
enum SQL_UB_DEFAULT = SQL_UB_OFF;
enum SQL_UB_FIXED = SQL_UB_ON;
enum SQL_UB_VARIABLE = 2UL;

//SQLGetTypeInfo - SEARCHABLE
enum SQL_COL_PRED_CHAR = SQL_LIKE_ONLY;
enum SQL_COL_PRED_BASIC = SQL_ALL_EXCEPT_LIKE;

//SQLSetPos
enum SQL_ENTIRE_ROWSET = 0;

//SQLSetPos - Operation
enum SetPosOperation : SQLUSMALLINT {
    SQL_POSITION = 0,
    SQL_REFRESH,
    SQL_UPDATE,
    SQL_DELETE
}

//SQLBulkOperations - Operation
enum BulkOperation : SQLUSMALLINT {
    SQL_ADD = 4,
    SQL_SETPOS_MAX_OPTION_VALUE = SQL_ADD,
    SQL_UPDATE_BY_BOOKMARK = 5,
    SQL_DELETE_BY_BOOKMARK = 6,
    SQL_FETCH_BY_BOOKMARK = 7
}

//SQLSetPos - LockType
enum SetPosLockOperation : SQLUSMALLINT {
    SQL_LOCK_NO_CHANGE = 0,
    SQL_LOCK_EXCLUSIVE,
    SQL_LOCK_UNLOCK
}

enum SQL_SETPOS_MAX_LOCK_VALUE = SetPosLockOperation.SQL_LOCK_UNLOCK;

//SQLSetPos functions
auto SQL_POSITION_TO(T1, T2)(T1 hstmt, T2 irow) {
    return SQLSetPos(hstmt,irow,SQL_POSITION,SQL_LOCK_NO_CHANGE);
}
auto SQL_LOCK_RECORD(T1, T2, T3)(T1 hstmt, T2 irow, T3 fLock) {
    return SQLSetPos(hstmt,irow,SQL_POSITION,fLock);
}
auto SQL_REFRESH_RECORD(T1, T2, T3)(T1 hstmt, T2 irow, T3 fLock) {
    return SQLSetPos(hstmt,irow,SQL_REFRESH,fLock);
}
auto SQL_UPDATE_RECORD(T1, T2)(T1 hstmt, T2 irow) {
    return SQLSetPos(hstmt,irow,SQL_UPDATE,SQL_LOCK_NO_CHANGE);
}
auto SQL_DELETE_RECORD(T1, T2)(T1 hstmt, T2 irow) {
    return SQLSetPos(hstmt,irow,SQL_DELETE,SQL_LOCK_NO_CHANGE);
}
auto SQL_ADD_RECORD(T1, T2)(T1 hstmt, T2 irow) {
    return SQLSetPos(hstmt,irow,SQL_ADD,SQL_LOCK_NO_CHANGE);
}

//SQLSpecialColumns - Column types and scopes
enum SpecialColumnRequestType : SQLUSMALLINT {
    SQL_BEST_ROWID = 1,
    SQL_ROWVER = 2
}

//All the ODBC keywords
enum SQL_ODBC_KEYWORDS =
    "ABSOLUTE,ACTION,ADA,ADD,ALL,ALLOCATE,ALTER,AND,ANY,ARE,AS,"
        "ASC,ASSERTION,AT,AUTHORIZATION,AVG,"
        "BEGIN,BETWEEN,BIT,BIT_LENGTH,BOTH,BY,CASCADE,CASCADED,CASE,CAST,CATALOG,"
        "CHAR,CHAR_LENGTH,CHARACTER,CHARACTER_LENGTH,CHECK,CLOSE,COALESCE,"
        "COLLATE,COLLATION,COLUMN,COMMIT,CONNECT,CONNECTION,CONSTRAINT,"
        "CONSTRAINTS,CONTINUE,CONVERT,CORRESPONDING,COUNT,CREATE,CROSS,CURRENT,"
        "CURRENT_DATE,CURRENT_TIME,CURRENT_TIMESTAMP,CURRENT_USER,CURSOR,"
        "DATE,DAY,DEALLOCATE,DEC,DECIMAL,DECLARE,DEFAULT,DEFERRABLE,"
        "DEFERRED,DELETE,DESC,DESCRIBE,DESCRIPTOR,DIAGNOSTICS,DISCONNECT,"
        "DISTINCT,DOMAIN,DOUBLE,DROP,"
        "ELSE,END,END-EXEC,ESCAPE,EXCEPT,EXCEPTION,EXEC,EXECUTE,"
        "EXISTS,EXTERNAL,EXTRACT,"
        "FALSE,FETCH,FIRST,FLOAT,FOR,FOREIGN,FORTRAN,FOUND,FROM,FULL,"
        "GET,GLOBAL,GO,GOTO,GRANT,GROUP,HAVING,HOUR,"
        "IDENTITY,IMMEDIATE,IN,INCLUDE,INDEX,INDICATOR,INITIALLY,INNER,"
        "INPUT,INSENSITIVE,INSERT,INT,INTEGER,INTERSECT,INTERVAL,INTO,IS,ISOLATION,"
        "JOIN,KEY,LANGUAGE,LAST,LEADING,LEFT,LEVEL,LIKE,LOCAL,LOWER,"
        "MATCH,MAX,MIN,MINUTE,MODULE,MONTH,"
        "NAMES,NATIONAL,NATURAL,NCHAR,NEXT,NO,NONE,NOT,NULL,NULLIF,NUMERIC,"
        "OCTET_LENGTH,OF,ON,ONLY,OPEN,OPTION,OR,ORDER,OUTER,OUTPUT,OVERLAPS,"
        "PAD,PARTIAL,PASCAL,PLI,POSITION,PRECISION,PREPARE,PRESERVE,"
        "PRIMARY,PRIOR,PRIVILEGES,PROCEDURE,PUBLIC,"
        "READ,REAL,REFERENCES,RELATIVE,RESTRICT,REVOKE,RIGHT,ROLLBACK,ROWS"
        "SCHEMA,SCROLL,SECOND,SECTION,SELECT,SESSION,SESSION_USER,SET,SIZE,"
        "SMALLINT,SOME,SPACE,SQL,SQLCA,SQLCODE,SQLERROR,SQLSTATE,SQLWARNING,"
        "SUBSTRING,SUM,SYSTEM_USER,"
        "TABLE,TEMPORARY,THEN,TIME,TIMESTAMP,TIMEZONE_HOUR,TIMEZONE_MINUTE,"
        "TO,TRAILING,TRANSACTION,TRANSLATE,TRANSLATION,TRIM,TRUE,"
        "UNION,UNIQUE,UNKNOWN,UPDATE,UPPER,USAGE,USER,USING,"
        "VALUE,VALUES,VARCHAR,VARYING,VIEW,WHEN,WHENEVER,WHERE,WITH,WORK,WRITE,"
        "YEAR,ZONE";

/*
 * ----------------------------------------------------------------------
 * Level 2 Functions
 * ----------------------------------------------------------------------
 */

//SQLExtendedFetch - fFetchType
enum SQL_FETCH_BOOKMARK = 8;

//SQLExtendedFetch - rgfRowStatus
enum RowStatus : SQLUSMALLINT {
    SQL_ROW_SUCCESS = 0,
    SQL_ROW_DELETED,
    SQL_ROW_UPDATED,
    SQL_ROW_NOROW,
    SQL_ROW_ADDED,
    SQL_ROW_ERROR,
    SQL_ROW_SUCCESS_WITH_INFO,
    SQL_ROW_PROCEED = 0,
    SQL_ROW_IGNORE = 1
}

//SQL_DESC_ARRAY_STATUS_PTR
enum SQL_PARAM_SUCCESS = 0;
enum SQL_PARAM_SUCCESS_WITH_INFO = 6;
enum SQL_PARAM_ERROR = 5;
enum SQL_PARAM_UNUSED = 7;
enum SQL_PARAM_DIAG_UNAVAILABLE = 1;

enum SQL_PARAM_PROCEED = 0;
enum SQL_PARAM_IGNORE = 1;

//SQLForeignKeys - UPDATE_RULE/DELETE_RULE
enum SQL_CASCADE = 0;
enum SQL_RESTRICT = 1;
enum SQL_SET_NULL = 2;
enum SQL_NO_ACTION = 3;
enum SQL_SET_DEFAULT = 4;

//SQLForeignKeys - DEFERABILITY
enum SQL_INITIALLY_DEFERRED = 5;
enum SQL_INITIALLY_IMMEDIATE = 6;
enum SQL_NOT_DEFERRABLE = 7;

//SQLBindParameter - fParamType
//SQLProcedureColumns - COLUMN_TYPE
enum InputOutputType : SQLSMALLINT {
    SQL_PARAM_TYPE_UNKNOWN = 0,
    SQL_PARAM_INPUT = 1,
    SQL_PARAM_INPUT_OUTPUT = 2,
    SQL_RESULT_COL = 3,
    SQL_PARAM_OUTPUT = 4,
    SQL_RETURN_VALUE = 5,
}

//SQLProcedures - PROCEDURE_TYPE
enum SQL_PT_UNKNOWN = 0;
enum SQL_PT_PROCEDURE = 1;
enum SQL_PT_FUNCTION = 2;

//SQLSetParam to SQLBindParameter conversion
enum SQL_PARAM_TYPE_DEFAULT = InputOutputType.SQL_PARAM_INPUT_OUTPUT;
enum SQL_SETPARAM_VALUE_MAX = -1L;

//SQLStatistics - fAccuracy
enum StatisticsUrgency : SQLUSMALLINT {
    SQL_QUICK = 0,
    SQL_ENSURE
}

//SQLStatistics - TYPE
enum SQL_TABLE_STAT = 0;

//SQLTables
enum SQL_ALL_CATALOGS = "%";
enum SQL_ALL_SCHEMAS = "%";
enum SQL_ALL_TABLE_TYPES = "%";
enum SQL_ALL_CATALOGSW = "%"w;
enum SQL_ALL_SCHEMASW = "%"w;
enum SQL_ALL_TABLE_TYPESW = "%"w;


//SQLSpecialColumns - PSEUDO_COLUMN
enum SQL_PC_NOT_PSEUDO = 1;

//Deprecated defines from prior versions of ODBC
enum SQL_DATABASE_NAME = 16;
enum SQL_FD_FETCH_PREV = SQL_FD_FETCH_PRIOR;
enum SQL_FETCH_PREV = FetchType.SQL_FETCH_PRIOR;
enum SQL_CONCUR_TIMESTAMP = SQL_CONCUR_ROWVER;
enum SQL_SCCO_OPT_TIMESTAMP = SQL_SCCO_OPT_ROWVER;
enum SQL_CC_DELETE = SQL_CB_DELETE;
enum SQL_CR_DELETE = SQL_CB_DELETE;
enum SQL_CC_CLOSE = SQL_CB_CLOSE;
enum SQL_CR_CLOSE = SQL_CB_CLOSE;
enum SQL_CC_PRESERVE = SQL_CB_PRESERVE;
enum SQL_CR_PRESERVE = SQL_CB_PRESERVE;
enum SQL_FETCH_RESUME = 7;
enum SQL_SCROLL_FORWARD_ONLY = 0L;
enum SQL_SCROLL_KEYSET_DRIVEN = -1L;
enum SQL_SCROLL_DYNAMIC = -2L;
enum SQL_SCROLL_STATIC = -3L;

/*
 * Level 1 function prototypes
 */

extern(System):

SQLRETURN SQLDriverConnect(
    SQLHDBC hdbc, SQLHWND hwnd,
    SQLWCHAR* szConnStrIn, SQLSMALLINT cbConnStrIn,
    SQLWCHAR* szConnStrOut, SQLSMALLINT cbConnStrOutMax,
    SQLSMALLINT* pcbConnStrOut, SQLUSMALLINT fDriverCompletion);

/*
 * Level 2 function prototypes
 */

SQLRETURN SQLBrowseConnect(
    SQLHDBC hdbc, SQLCHAR* szConnStrIn,
    SQLSMALLINT cbConnStrIn, SQLCHAR* szConnStrOut,
    SQLSMALLINT cbConnStrOutMax, SQLSMALLINT* pcbConnStrOut);

SQLRETURN SQLBulkOperations(SQLHSTMT StatementHandle, SQLSMALLINT Operation);

SQLRETURN SQLColAttributes(
    SQLHSTMT hstmt, SQLUSMALLINT icol,
    SQLUSMALLINT fDescType, SQLPOINTER rgbDesc,
    SQLSMALLINT cbDescMax, SQLSMALLINT* pcbDesc,
    SQLLEN*  pfDesc);

SQLRETURN SQLColumnPrivileges(
    SQLHSTMT hstmt, SQLCHAR* szCatalogName,
    SQLSMALLINT cbCatalogName, SQLCHAR* szSchemaName,
    SQLSMALLINT cbSchemaName, SQLCHAR* szTableName,
    SQLSMALLINT cbTableName, SQLCHAR* szColumnName,
    SQLSMALLINT cbColumnName);

SQLRETURN SQLDescribeParam(
    SQLHSTMT hstmt, SQLUSMALLINT ipar,
    SQLSMALLINT* pfSqlType, SQLULEN* pcbParamDef,
    SQLSMALLINT* pibScale, SQLSMALLINT* pfNullable);

SQLRETURN SQLExtendedFetch(
    SQLHSTMT hstmt, SQLUSMALLINT fFetchType,
    SQLLEN irow, SQLULEN* pcrow,
    SQLUSMALLINT* rgfRowStatus);

SQLRETURN SQLForeignKeys(
    SQLHSTMT hstmt, SQLCHAR* szPkCatalogName,
    SQLSMALLINT cbPkCatalogName, SQLCHAR* szPkSchemaName,
    SQLSMALLINT cbPkSchemaName, SQLCHAR* szPkTableName,
    SQLSMALLINT cbPkTableName, SQLCHAR* szFkCatalogName,
    SQLSMALLINT cbFkCatalogName, SQLCHAR* szFkSchemaName,
    SQLSMALLINT cbFkSchemaName, SQLCHAR* szFkTableName,
    SQLSMALLINT cbFkTableName);

SQLRETURN SQLMoreResults(SQLHSTMT hstmt);

SQLRETURN SQLNativeSql(
    SQLHDBC hdbc, SQLINTEGER cbSqlStrIn,
    SQLINTEGER cbSqlStrMax, SQLINTEGER* pcbSqlStr);

SQLRETURN SQLNumParams(SQLHSTMT hstmt, SQLSMALLINT* pcpar);

SQLRETURN SQLParamOptions(
    SQLHSTMT hstmt,
    SQLULEN crow,
    SQLULEN* pirow);

SQLRETURN SQLPrimaryKeys(
    SQLHSTMT hstmt, SQLCHAR* szCatalogName,
    SQLSMALLINT cbCatalogName, SQLCHAR* szSchemaName,
    SQLSMALLINT cbSchemaName, SQLCHAR* szTableName,
    SQLSMALLINT cbTableName);

SQLRETURN SQLProcedureColumns(
    SQLHSTMT hstmt, SQLCHAR* szCatalogName,
    SQLSMALLINT cbCatalogName, SQLCHAR* szSchemaName,
    SQLSMALLINT cbSchemaName, SQLCHAR* szProcName,
    SQLSMALLINT cbProcName, SQLCHAR* szColumnName,
    SQLSMALLINT cbColumnName);

SQLRETURN SQLProcedures(
    SQLHSTMT hstmt, SQLCHAR* szCatalogName,
    SQLSMALLINT cbCatalogName, SQLCHAR* szSchemaName,
    SQLSMALLINT cbSchemaName, SQLCHAR* szProcName,
    SQLSMALLINT cbProcName);

SQLRETURN SQLSetPos(
    SQLHSTMT hstmt, SQLSETPOSIROW irow,
    SQLUSMALLINT fOption, SQLUSMALLINT fLock);

SQLRETURN SQLTablePrivileges(
    SQLHSTMT hstmt, SQLCHAR* szCatalogName,
    SQLSMALLINT cbCatalogName, SQLCHAR* szSchemaName,
    SQLSMALLINT cbSchemaName, SQLCHAR* szTableName,
    SQLSMALLINT cbTableName);

SQLRETURN SQLDrivers(
    SQLHENV henv, SQLUSMALLINT fDirection,
    SQLCHAR* szDriverDesc, SQLSMALLINT cbDriverDescMax,
    SQLSMALLINT* pcbDriverDesc, SQLCHAR* szDriverAttributes,
    SQLSMALLINT cbDrvrAttrMax, SQLSMALLINT* pcbDrvrAttr);

SQLRETURN SQLBindParameter(
    SQLHSTMT hstmt, SQLUSMALLINT ipar,
    SQLSMALLINT fParamType, SQLSMALLINT fCType,
    SQLSMALLINT fSqlType, SQLULEN cbColDef,
    SQLSMALLINT ibScale, SQLPOINTER rgbValue,
    SQLLEN cbValueMax, SQLLEN* pcbValue);

deprecated("Use SQLSetStmtOptions")
    SQLRETURN SQLSetScrollOptions(
        SQLHSTMT hstmt, SQLUSMALLINT fConcurrency,
        SQLLEN crowKeyset, SQLUSMALLINT crowRowset);

//SQLAllocHandleStd - make SQLAllocHandle compatible with X/Open standard
version(ODBC_STD) {
    enum SQLAllocHandle = SQLAllocHandleStd;
    auto SQLAllocEnv(T1)(T1 phenv) {
        return SQLAllocHandleStd(SQL_HANDLE_ENV, SQL_NULL_HANDLE, phenv);
    }

    SQLRETURN SQLAllocHandleStd(
        SQLSMALLINT fHandleType,
        SQLHANDLE hInput,
        SQLHANDLE* phOutput);
} //version(ODBC_STD)
